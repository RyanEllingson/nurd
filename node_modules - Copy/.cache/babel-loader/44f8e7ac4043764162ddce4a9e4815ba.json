{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/16123/Desktop/github/repos/nurd/src/auth/auth.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\"; // Create user context to get user in nested pages\n\nexport const AuthContext = React.createContext(\"auth\");\nexport const logoutUser = setUser => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  setUser(null);\n};\nexport const loginUser = (setUser, setErrors) => userData => {\n  console.log(userData);\n  axios.post(\"http://localhost:5000/api/users/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    setUser(decoded);\n  }).catch(err => {\n    console.log(err);\n    setErrors(err.response.data);\n  });\n};\nexport const registerUser = setErrors => (userData, history) => {\n  console.log(userData);\n  axios.post(\"http://localhost:5000/api/users/register\", userData).then(res => history.push(\"/login\")).catch(err => {\n    console.log(err);\n    setErrors(err.response.data);\n  });\n};\nexport function useAuth() {\n  const [user, setUser] = useState(null);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      // Set auth token header auth\n      const token = localStorage.jwtToken;\n      setAuthToken(token); // Decode token and get user info and exp\n\n      const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n      setUser(decoded); // Check for expired token\n\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n\n      if (decoded.exp < currentTime) {\n        // Logout user\n        logoutUser(setUser); // Redirect to login\n\n        window.location.href = \"./login\";\n      }\n    }\n  }, []);\n  return {\n    user,\n    errors,\n    loginUser: loginUser(setUser, setErrors),\n    logoutUser: () => logoutUser(setUser),\n    registerUser: registerUser(setErrors)\n  };\n}\nexport function Auth({\n  children\n}) {\n  const {\n    user,\n    errors,\n    loginUser,\n    logoutUser,\n    registerUser\n  } = useAuth();\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      errors,\n      loginUser,\n      logoutUser,\n      registerUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, children);\n}","map":{"version":3,"sources":["/mnt/c/Users/16123/Desktop/github/repos/nurd/src/auth/auth.js"],"names":["React","useState","useEffect","axios","jwt_decode","setAuthToken","AuthContext","createContext","logoutUser","setUser","localStorage","removeItem","loginUser","setErrors","userData","console","log","post","then","res","token","data","setItem","decoded","catch","err","response","registerUser","history","push","useAuth","user","errors","jwtToken","currentTime","Date","now","exp","window","location","href","Auth","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Create user context to get user in nested pages\nexport const AuthContext = React.createContext(\"auth\");\n\nexport const logoutUser = setUser => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  setUser(null);\n};\n\nexport const loginUser = (setUser, setErrors) => userData => {\n  console.log(userData);\n  axios\n    .post(\"http://localhost:5000/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      setUser(decoded);\n    })\n    .catch(err => {\n      console.log(err);\n      setErrors(err.response.data);\n    });\n};\n\nexport const registerUser = setErrors => (userData, history) => {\n  console.log(userData);\n  axios\n    .post(\"http://localhost:5000/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err => {\n      console.log(err);\n      setErrors(err.response.data);\n    });\n};\n\nexport function useAuth() {\n  const [user, setUser] = useState(null);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      // Set auth token header auth\n      const token = localStorage.jwtToken;\n      setAuthToken(token);\n      // Decode token and get user info and exp\n      const decoded = jwt_decode(token);\n      // Set user and isAuthenticated\n      setUser(decoded);\n      // Check for expired token\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n      if (decoded.exp < currentTime) {\n        // Logout user\n        logoutUser(setUser);\n\n        // Redirect to login\n        window.location.href = \"./login\";\n      }\n    }\n  }, []);\n\n  return {\n    user,\n    errors,\n    loginUser: loginUser(setUser, setErrors),\n    logoutUser: () => logoutUser(setUser),\n    registerUser: registerUser(setErrors)\n  };\n}\n\nexport function Auth({ children }) {\n  const { user, errors, loginUser, logoutUser, registerUser } = useAuth();\n\n  return (\n    <AuthContext.Provider\n      value={{ user, errors, loginUser, logoutUser, registerUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}