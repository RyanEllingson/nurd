{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/16123/Desktop/github/repos/nurd/src/groups/pages/NewGroup.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport \"./NewGroup.css\";\n\nconst userInputReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let userFormIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          userFormIsValid = userFormIsValid && action.inputIsValid;\n        } else {\n          userFormIsValid = userFormIsValid && state.inputs[inputId].inputIsValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            InputIsValid: action.inputIsValid\n          }\n        },\n        inputIsValid: userFormIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewGroup = () => {\n  const [formState, dispatch] = useReducer(userInputReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        inputIsValid: false\n      },\n      description: {\n        value: \"\",\n        inputIsValid: false\n      }\n    },\n    inputIsValid: false\n  });\n  const inputHandler = useCallback((id, value, inputIsValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      inputIsValid: inputIsValid,\n      inputId: id\n    });\n  }, []);\n\n  const groupSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return React.createElement(\"form\", {\n    className: \"group-form\",\n    onSubmit: groupSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Create A Group\"), React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"username\",\n    element: \"input\",\n    label: \"Creator\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid username.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.inputIsValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"CREATE\"));\n};\n\nexport default NewGroup;","map":{"version":3,"sources":["/mnt/c/Users/16123/Desktop/github/repos/nurd/src/groups/pages/NewGroup.js"],"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","userInputReducer","state","action","type","userFormIsValid","inputId","inputs","inputIsValid","value","InputIsValid","NewGroup","formState","dispatch","title","description","inputHandler","id","groupSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from \"../../shared/util/validators\";\nimport \"./NewGroup.css\";\n\nconst userInputReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let userFormIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          userFormIsValid = userFormIsValid && action.inputIsValid;\n        } else {\n          userFormIsValid =\n            userFormIsValid && state.inputs[inputId].inputIsValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            InputIsValid: action.inputIsValid\n          }\n        },\n        inputIsValid: userFormIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nconst NewGroup = () => {\n  const [formState, dispatch] = useReducer(userInputReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        inputIsValid: false\n      },\n      description: {\n        value: \"\",\n        inputIsValid: false\n      }\n    },\n    inputIsValid: false\n  });\n\n  const inputHandler = useCallback((id, value, inputIsValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      inputIsValid: inputIsValid,\n      inputId: id\n    });\n  }, []);\n\n  const groupSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <form className=\"group-form\" onSubmit={groupSubmitHandler}>\n      <h2>Create A Group</h2>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"username\"\n        element=\"input\"\n        label=\"Creator\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid username.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.inputIsValid}>\n        CREATE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewGroup;\n"]},"metadata":{},"sourceType":"module"}